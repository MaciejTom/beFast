{"version":3,"sources":["App.js","index.js"],"names":["App","useState","div","setDiv","first","setFirst","second","setSecond","timeStart","setTimeStart","timeFinish","setTimeFinish","arr","setArr","amount","setAmount","number","setNumber","colors","setColors","isSwitchOn","classState","setClassState","third","classPulsate","setClassPulsate","textInDiv","setTextInDiv","click","setClick","fourth","fifth","sixth","checkboxes","setCheckboxes","setGreenColor","console","log","setColor","Math","floor","random","length","setWhite","prev","handleWhoGive","event","includes","target","value","filter","el","styles","red","backgroundColor","color","brown","blue","yellow","orange","purple","background","seconds","setSeconds","getSeconds","slice","getMinutes","className","type","name","onChange","e","onClick","x","parseInt","array","y","push","i","undefined","alert","map","setTimeout","setInterval","highestTimeoutId","clearTimeout","style","defaultChecked","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c7c2979.chunk.js","sourcesContent":["import React, {useState} from \"react\";\n\n\nfunction App() {\n\n  const [div, setDiv] = useState(\"white\")\n  const [first, setFirst] = useState(1)\n  const [second, setSecond] = useState(1)\n  const [timeStart, setTimeStart] = useState(0);\n  const [timeFinish, setTimeFinish] = useState(12);\n  const [arr, setArr] = useState();\n  const [amount, setAmount] = useState(100);\n  const [number, setNumber] = useState()\n  const [colors, setColors] = useState([\"red\"]);\n  const [classState, setClassState] = useState({isSwitchOn: false})\n  const [classPulsate, setClassPulsate] = useState({\n      first: true,\n      second: false,\n      third: false\n    })\n  const [textInDiv, setTextInDiv] = useState(true)\n  const [click, setClick] = useState(true)\n  const [checkboxes, setCheckboxes] = useState({\n    first: true,\n    second: false,\n    third: false,\n    fourth: false,\n    fifth: false,\n    sixth: false\n  })\n\n  ///////////////////////////CHECKBOXES FUNCTIONS\n  const handleFirstCheckbox = () => {\n    setCheckboxes({...checkboxes,\n    first: !checkboxes.first})\n\n  }\n  const handleSecondCheckbox = () => {\n    setCheckboxes({...checkboxes,\n    second: !checkboxes.second})\n\n  }\n  const handleThirdCheckbox = () => {\n    setCheckboxes({...checkboxes,\n    third: !checkboxes.third})\n\n  }\n  const handleFourthCheckbox = () => {\n    setCheckboxes({...checkboxes,\n    fourth: !checkboxes.fourth})\n\n  }\n  const handleFifthCheckbox = () => {\n    setCheckboxes({...checkboxes,\n    fifth: !checkboxes.fifth})\n\n  }\n  const handleSixthCheckbox = () => {\n    setCheckboxes({...checkboxes,\n    sixth: !checkboxes.sixth})\n\n  }\n  const allCheckboxes = () => {\n    if (checkboxes.first == false &&\n    checkboxes.second == false &&\n    checkboxes.third == false &&\n    checkboxes.fourth == false &&\n    checkboxes.fifth == false &&\n    checkboxes.sixth == false) {\n      return false;\n    }else {\n      return true;\n    }\n  }\n\n\nconst setGreenColor = (arr) => {\n  setDiv(\"green\")\n  console.log(\"ZIELONY\")\n}\n\nconst setColor = () => {\n  setDiv(colors[Math.floor(Math.random() * (colors.length - 0))+0])\n  console.log(\"KOLOR\")\n}\n\nconst setWhite = () => {\n  setDiv(\"white\")\n  setNumber(prev => prev - 1)\n  console.log(\"BIALY\")\n}\n\nconst handleChangeFirst = e => {\n  setFirst(e.target.value);\n};\n\nconst handleChangeSecond = e => {\n  setSecond(e.target.value);\n  console.log(\"second\");\n};\n\nconst handleChangeStart = e => {\n  setTimeStart(e.target.value);\n  console.log(\"third\");\n};\n\nconst handleChangeFinish = e => {\n  setTimeFinish(e.target.value);\n  console.log(\"fourth\");\n};\n\nconst handleChangeAmount = e => {\n  setAmount(e.target.value);\n};\n\nconst handleWhoGive = event => {\n    if (colors.includes(event.target.value)) {\n      setColors(colors.filter(el => el !== event.target.value));\n      return;\n    }\n    setColors([...colors, event.target.value]);\n\n  };\n\n  const styles = {\n    red: { backgroundColor: \"red\", color: \"white\" },\n    brown: { backgroundColor: \"saddlebrown\", color: \"white\" },\n    blue: { backgroundColor: \"blue\", color: \"white\" },\n    yellow: { backgroundColor: \"yellow\", color: \"white\" },\n    orange: { backgroundColor: \"green\", color: \"white\" },\n    purple: {background: \"purple\", color: \"white\"}\n  };\n\n  const [seconds, setSeconds] = useState({seconds: 0})\n\n  const getSeconds = () => {\n    return ('0' + seconds.seconds % 60).slice(-2)\n  }\n  const getMinutes = () => {\n    return Math.floor(seconds.seconds / 60)\n  }\n\nfunction loop() {\n  const x = parseInt(amount);\n  let array = [];\n  let y = 0;\n  let random =\n    (Math.floor(\n      Math.random() * (parseInt(timeFinish) - parseInt(timeStart) + 1)\n    ) +\n      parseInt(timeStart)) *\n    1000;\n\n  y = random + y;\n  array.push(y);\n  for (let i = 0; i <= x-2; i++) {\n    random = (Math.floor(Math.random() * (parseInt(timeFinish) - parseInt(timeStart) + 1)) + parseInt(timeStart) + parseInt(first) + parseInt(second)) * 1000;\n\n    console.log(y);\n\n    y = random + y;\n\n    array.push(y);\n}\n    console.log(array);\n    y = 0;\n    console.log(\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\");\n    random = 0;\n    setArr(array);\n    array = [];\n\n    setClassPulsate({\n      first: false,\n      second: true,\n      third: false})\n}\n\n\nfunction start() {\n  if (arr === undefined) {alert(\"Nie potwierdzono czasu!!!\")} else {\n\n  setNumber(amount)\n  console.log(arr)\n  console.log(\"start\")\n\n\n  arr.map(el => {\n    setTimeout(setGreenColor, el + timeStart*1000);\n    setTimeout(setColor, el + first*1000 + timeStart*1000);\n    setTimeout(setWhite, el + first*1000 + second*1000 + timeStart*1000);\n\n   });\n\n }\n setClassPulsate({\n   first: false,\n   second: false,\n   third: true})\n   if (click) {\n   setTextInDiv(false)\n   setTimeout(() => {setTextInDiv(true)}, 4900)}\n   setClick(false)\n\n   console.log(seconds.seconds)\n   console.log(setInterval(function(){\n     setSeconds(prev => ({seconds: prev.seconds + 1}))\n   }, 1000))\n\n}\n\n\n\n function stop() {\n   var highestTimeoutId = setTimeout(\";\");\n   for (var i = 0 ; i < highestTimeoutId ; i++) {\n       clearTimeout(i);\n   }\n   setNumber()\n   setDiv(\"white\")\n   setClassPulsate({\n     first: true,\n     second: false,\n     third: false});\n     setSeconds({seconds: 0})\n }\n function big() {\n   setClassState({isSwitchOn: !classState.isSwitchOn})\n }\n\nreturn (\n  <div className=\"App\">\n    <div className={classState.isSwitchOn ? \"inputs none\" : \"inputs\"}>\n      <label>\n        Czas trwania pierwszego sygnału\n        <input\n          type=\"number\"\n          name=\"first\"\n          value={first}\n          onChange={handleChangeFirst}\n        />\n      </label>\n      <label>\n        Czas trwania drugiego sygnału\n        <input\n          type=\"number\"\n          name=\"second\"\n          value={second}\n          onChange={handleChangeSecond}\n        />\n      </label>\n      <label>\n        Minimalny czas oczekiwania na sygnał\n        <input\n          type=\"number\"\n          name=\"timeStart\"\n          value={timeStart}\n          onChange={handleChangeStart}\n        />\n      </label>\n\n      <label>\n        Maksymalny czas oczekiwania na sygnał\n        <input\n          type=\"number\"\n          name=\"timeFinish\"\n          value={timeFinish}\n          onChange={handleChangeFinish}\n        />\n      </label>\n      <label>\n        Ilość sekwencji\n        <input\n          type=\"number\"\n          name=\"amount\"\n          value={amount}\n          onChange={handleChangeAmount}\n        />\n      </label>\n      <button\n        onClick={loop}\n        className={classPulsate.first ? \"start pulsate\" : \"start\"}\n      >\n        Zatwierdź czas\n      </button>\n      <button\n        onClick={start}\n        className={classPulsate.second ? \"start pulsate\" : \"start\"}\n      >\n        Start\n      </button>\n      <button\n        onClick={stop}\n        className={classPulsate.third ? \"start pulsate\" : \"start\"}\n      >\n        Stop\n      </button>\n    </div>\n\n    <div\n      style={{ backgroundColor: div }}\n      className={classState.isSwitchOn ? \"box big\" : \"box\"}\n      onClick={big}\n    >\n      {classState.isSwitchOn ? <div><span>{number}</span><span> {getMinutes()}:{getSeconds()}</span></div> : null}\n      {}\n      {!classState.isSwitchOn ? (\n        <span className={textInDiv ? \"pulsateText none\" : \"pulsateText\"}>\n          Kliknij aby wejść w tryb pełnoekranowy!\n        </span>\n      ) : null}{\" \"}\n    </div>\n\n    <div className={classState.isSwitchOn ? \"colors none\" : \"colors\"}>\n      <div className=\"labels\">\n        <div>\n          <label style={colors.includes(\"red\") ? styles.red : {}}>\n            red\n            <input\n              type=\"checkbox\"\n              value=\"red\"\n              onClick={handleWhoGive}\n              defaultChecked={true}\n              onChange={handleFirstCheckbox}\n            />\n          </label>\n          <label style={colors.includes(\"saddlebrown\") ? styles.brown : {}}>\n            brown\n            <input\n              type=\"checkbox\"\n              value=\"saddlebrown\"\n              onClick={handleWhoGive}\n              onChange={handleSecondCheckbox}\n            />\n          </label>\n        </div>\n        <div>\n          <label style={colors.includes(\"blue\") ? styles.blue : {}}>\n            blue\n            <input\n              type=\"checkbox\"\n              value=\"blue\"\n              onClick={handleWhoGive}\n              onChange={handleThirdCheckbox}\n            />\n          </label>\n\n          <label style={colors.includes(\"green\") ? styles.orange : {}}>\n            green\n            <input\n              type=\"checkbox\"\n              value=\"green\"\n              onClick={handleWhoGive}\n              onChange={handleFourthCheckbox}\n            />\n          </label>\n        </div>\n        <div>\n          <label style={colors.includes(\"purple\") ? styles.purple : {}}>\n            purple\n            <input\n              type=\"checkbox\"\n              value=\"purple\"\n              onClick={handleWhoGive}\n              onChange={handleFifthCheckbox}\n            />\n          </label>\n          <label style={colors.includes(\"yellow\") ? styles.yellow : {}}>\n            yellow\n            <input\n              type=\"checkbox\"\n              value=\"yellow\"\n              onClick={handleWhoGive}\n              onChange={handleSixthCheckbox}\n            />\n          </label>\n        </div>\n      </div>\n      <span className={allCheckboxes() ? \"noChecked noneVis\" : \"noChecked\"}>\n        Nie zaznaczono żadnego koloru!\n      </span>\n      <div className={classState.isSwitchOn ? \"numbers none\" : \"numbers\"}>\n        <span>{getMinutes()}:{getSeconds()}</span>\n        <span>{number}</span>\n\n      </div>\n    </div>\n  </div>\n);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/main.scss';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}