{"ast":null,"code":"import _slicedToArray from\"/home/maciej/Pulpit/reflex/reflex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";function App(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),randomColor=_useState2[0],setRandomColor=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),randomNumber=_useState4[0],setRandomNumber=_useState4[1];var _useState5=useState(\"white\"),_useState6=_slicedToArray(_useState5,2),div=_useState6[0],setDiv=_useState6[1];var _useState7=useState(1),_useState8=_slicedToArray(_useState7,2),first=_useState8[0],setFirst=_useState8[1];var _useState9=useState(1),_useState10=_slicedToArray(_useState9,2),second=_useState10[0],setSecond=_useState10[1];var _useState11=useState(0),_useState12=_slicedToArray(_useState11,2),timeStart=_useState12[0],setTimeStart=_useState12[1];var _useState13=useState(12),_useState14=_slicedToArray(_useState13,2),timeFinish=_useState14[0],setTimeFinish=_useState14[1];var _useState15=useState(),_useState16=_slicedToArray(_useState15,2),arr=_useState16[0],setArr=_useState16[1];// const [info, setInfo] = useState({\n//     first: 1,\n//     second: 1,\n//     timeStart: 5,\n//     timeFinish: 10\n//   });\nvar setGreenColor=function setGreenColor(arr){setDiv(\"green\");// console.log(el)\n};var setColor=function setColor(){var colors=['red','bronze','blue','orange','yellow'];setDiv(colors[Math.floor(Math.random()*(colors.length-0+1))+0]);// console.log(el + first*1000)\n};var setWhite=function setWhite(){setDiv(\"white\");// console.log(el + first*1000 + second*1000)\n};useEffect(function(){console.log(\"useEffect\");var div=document.querySelector(\".box\");},[]);var handleChangeFirst=function handleChangeFirst(e){setFirst(e.target.value);// console.log(array)\n// setInfo((prev => ({ ...prev, [target.name]: target.value })));\n// console.log(\"first\")\n// console.log(info.first)\n};var handleChangeSecond=function handleChangeSecond(e){setSecond(e.target.value);// console.log(array)\n// setInfo((prev => ({ ...prev, [target.name]: target.value })));\nconsole.log(\"second\");};var handleChangeStart=function handleChangeStart(e){setTimeStart(e.target.value);// console.log(array)\n// setInfo((prev => ({ ...prev, [target.name]: target.value })));\nconsole.log(\"third\");};var handleChangeFinish=function handleChangeFinish(e){setTimeFinish(e.target.value);// console.log(array)\n// setInfo((prev => ({ ...prev, [target.name]: target.value })));\nconsole.log(\"fourth\");};function loop(){var x=100;var array=[];var y=0;var random=(Math.floor(Math.random()*(parseInt(timeFinish)-parseInt(timeStart)+1))+parseInt(timeStart))*1000;// parseFloat(random)\ny=random+y;array.push(y);for(var i=0;i<x;i++){// Math.floor(Math.random() * (max - min + 1)) + min;\n// random = (Math.floor(Math.random() * (timeFinish - timeStart + 1)) + timeStart + first + second)*1000;\nrandom=(Math.floor(Math.random()*(parseInt(timeFinish)-parseInt(timeStart)+1))+parseInt(timeStart)+parseInt(first)+parseInt(second))*1000;console.log(y);// parseFloat(random)\ny=random+y;array.push(y);// random = ((Math.floor(Math.random() * (info.timeFinish - info.timeStart)) + info.timeStart  + info.first + info.second))*1000;\n}console.log(array);y=0;console.log(\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\");random=0;setArr(array);array=[];}var start=function start(){console.log(arr);console.log(\"start\");arr.map(function(el){setTimeout(setGreenColor,el+timeStart*1000);setTimeout(setColor,el+first*1000+timeStart*1000);setTimeout(setWhite,el+first*1000+second*1000+timeStart*1000);});};//\nreturn/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(\"div\",{className:\"inputs\"},/*#__PURE__*/React.createElement(\"label\",null,\"Czas trwania pierwszego sygna\\u0142u\",/*#__PURE__*/React.createElement(\"input\",{type:\"number\",name:\"first\",value:first,onChange:handleChangeFirst})),/*#__PURE__*/React.createElement(\"label\",null,\"Czas trwania drugiego sygna\\u0142u\",/*#__PURE__*/React.createElement(\"input\",{type:\"number\",name:\"second\",value:second,onChange:handleChangeSecond})),/*#__PURE__*/React.createElement(\"label\",null,\"Minimalny czas oczekiwania na sygna\\u0142\",/*#__PURE__*/React.createElement(\"input\",{type:\"number\",name:\"timeStart\",value:timeStart,onChange:handleChangeStart})),/*#__PURE__*/React.createElement(\"label\",null,\"Maksymalny czas oczekiwania na sygna\\u0142\",/*#__PURE__*/React.createElement(\"input\",{type:\"number\",name:\"timeFinish\",value:timeFinish,onChange:handleChangeFinish})),/*#__PURE__*/React.createElement(\"button\",{onClick:loop,className:\"start\"},\"Kliknij aby zatwierdzi\\u0107 czas\"),/*#__PURE__*/React.createElement(\"button\",{onClick:start,className:\"start\"},\"Start\")),/*#__PURE__*/React.createElement(\"div\",{className:\"box\",style:{backgroundColor:div}}));}export default App;","map":{"version":3,"sources":["/home/maciej/Pulpit/reflex/reflex/src/App.js"],"names":["React","useState","useEffect","App","randomColor","setRandomColor","randomNumber","setRandomNumber","div","setDiv","first","setFirst","second","setSecond","timeStart","setTimeStart","timeFinish","setTimeFinish","arr","setArr","setGreenColor","setColor","colors","Math","floor","random","length","setWhite","console","log","document","querySelector","handleChangeFirst","e","target","value","handleChangeSecond","handleChangeStart","handleChangeFinish","loop","x","array","y","parseInt","push","i","start","map","el","setTimeout","backgroundColor"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\n\n\nfunction App() {\n\n  const [randomColor, setRandomColor] = useState(0)\n  const [randomNumber, setRandomNumber] = useState(0)\n  const [div, setDiv] = useState(\"white\")\n  const [first, setFirst] = useState(1)\n  const [second, setSecond] = useState(1)\n  const [timeStart, setTimeStart] = useState(0);\n  const [timeFinish, setTimeFinish] = useState(12);\n  const [arr, setArr] = useState();\n\n  // const [info, setInfo] = useState({\n  //     first: 1,\n  //     second: 1,\n  //     timeStart: 5,\n  //     timeFinish: 10\n  //   });\n\nconst setGreenColor = (arr) => {\n  setDiv(\"green\")\n  // console.log(el)\n\n\n}\nconst setColor = () => {\n  const colors = ['red', 'bronze', 'blue', 'orange', 'yellow'];\n  setDiv(colors[Math.floor(Math.random() * (colors.length - 0 + 1))+0])\n  // console.log(el + first*1000)\n}\nconst setWhite = () => {\n  setDiv(\"white\")\n  // console.log(el + first*1000 + second*1000)\n}\n\n  useEffect(() => {\n    console.log(\"useEffect\")\n    const div = document.querySelector(\".box\");\n\n\n  },[])\n\n\n  const handleChangeFirst = (e) => {\n\n    setFirst(e.target.value)\n\n    // console.log(array)\n     // setInfo((prev => ({ ...prev, [target.name]: target.value })));\n     // console.log(\"first\")\n     // console.log(info.first)\n   }\n\n   const handleChangeSecond = (e) => {\n     setSecond(e.target.value)\n      // console.log(array)\n      // setInfo((prev => ({ ...prev, [target.name]: target.value })));\n      console.log(\"second\")\n    }\n    const handleChangeStart = (e) => {\n      setTimeStart(e.target.value)\n      // console.log(array)\n\n       // setInfo((prev => ({ ...prev, [target.name]: target.value })));\n       console.log(\"third\")\n\n     }\n     const handleChangeFinish = (e) => {\n       setTimeFinish(e.target.value)\n       // console.log(array)\n        // setInfo((prev => ({ ...prev, [target.name]: target.value })));\n        console.log(\"fourth\")\n      }\n      function loop() {\n        const x = 100;\n        let array = [];\n        let y = 0;\n        let random = (Math.floor(Math.random() * (parseInt(timeFinish) - parseInt(timeStart) + 1)) + parseInt(timeStart))*1000;\n\n        // parseFloat(random)\n\n        y = random + y;\n        array.push(y);\n        for (let i = 0; i < x; i++) {\n          // Math.floor(Math.random() * (max - min + 1)) + min;\n          // random = (Math.floor(Math.random() * (timeFinish - timeStart + 1)) + timeStart + first + second)*1000;\n          random = (Math.floor(Math.random() * (parseInt(timeFinish) - parseInt(timeStart) + 1)) + parseInt(timeStart) + parseInt(first) + parseInt(second))*1000;\n\n          console.log(y)\n\n          // parseFloat(random)\n\n          y = random + y;\n\n          array.push(y);\n\n          // random = ((Math.floor(Math.random() * (info.timeFinish - info.timeStart)) + info.timeStart  + info.first + info.second))*1000;\n        }\n        console.log(array)\n        y = 0;\n      console.log(\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\")\n      random = 0\n        setArr(array)\n        array = [];\n\n\n      }\n\n\nconst start = () => {\n\n  console.log(arr)\n  console.log(\"start\")\n  arr.map(el => {\n     setTimeout(setGreenColor, el + timeStart*1000);\n     setTimeout(setColor, el + first*1000 + timeStart*1000);\n     setTimeout(setWhite, el + first*1000 + second*1000 + timeStart*1000);\n   });\n }\n\n\n\n//\n\n\n\n\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"inputs\">\n\n\n        <label>Czas trwania pierwszego sygnału\n      <input type=\"number\" name=\"first\" value={first} onChange={handleChangeFirst} />\n      </label>\n      <label>Czas trwania drugiego sygnału\n      <input type=\"number\" name=\"second\" value={second} onChange={handleChangeSecond}  />\n      </label>\n      <label>Minimalny czas oczekiwania na sygnał\n      <input type=\"number\" name=\"timeStart\" value={timeStart} onChange={handleChangeStart}  />\n      </label>\n\n\n      <label>Maksymalny czas oczekiwania na sygnał\n      <input type=\"number\" name=\"timeFinish\" value={timeFinish} onChange={handleChangeFinish}  />\n      </label>\n      <button onClick={loop} className=\"start\">Kliknij aby zatwierdzić czas</button>\n      <button onClick={start} className=\"start\">Start</button>\n      </div>\n\n\n\n\n      <div className=\"box\" style={{backgroundColor: div}}></div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}