{"ast":null,"code":"var _jsxFileName = \"/home/maciej/Pulpit/reflex/reflex/src/App.js\";\nimport React, { useState } from \"react\";\n\nfunction App() {\n  const [div, setDiv] = useState(\"white\");\n  const [first, setFirst] = useState(1);\n  const [second, setSecond] = useState(1);\n  const [timeStart, setTimeStart] = useState(0);\n  const [timeFinish, setTimeFinish] = useState(12);\n  const [arr, setArr] = useState();\n\n  const setGreenColor = arr => {\n    setDiv(\"green\"); // console.log(el)\n  };\n\n  const setColor = () => {\n    const colors = ['red', 'bronze', 'blue', 'orange', 'yellow'];\n    setDiv(colors[Math.floor(Math.random() * (colors.length - 0 + 1)) + 0]); // console.log(el + first*1000)\n  };\n\n  const setWhite = () => {\n    setDiv(\"white\"); // console.log(el + first*1000 + second*1000)\n  };\n\n  const handleChangeFirst = e => {\n    setFirst(e.target.value); // console.log(array)\n    // setInfo((prev => ({ ...prev, [target.name]: target.value })));\n    // console.log(\"first\")\n    // console.log(info.first)\n  };\n\n  const handleChangeSecond = e => {\n    setSecond(e.target.value); // console.log(array)\n    // setInfo((prev => ({ ...prev, [target.name]: target.value })));\n\n    console.log(\"second\");\n  };\n\n  const handleChangeStart = e => {\n    setTimeStart(e.target.value); // console.log(array)\n    // setInfo((prev => ({ ...prev, [target.name]: target.value })));\n\n    console.log(\"third\");\n  };\n\n  const handleChangeFinish = e => {\n    setTimeFinish(e.target.value); // console.log(array)\n    // setInfo((prev => ({ ...prev, [target.name]: target.value })));\n\n    console.log(\"fourth\");\n  };\n\n  function loop() {\n    const x = 100;\n    let array = [];\n    let y = 0;\n    let random = (Math.floor(Math.random() * (parseInt(timeFinish) - parseInt(timeStart) + 1)) + parseInt(timeStart)) * 1000; // parseFloat(random)\n\n    y = random + y;\n    array.push(y);\n\n    for (let i = 0; i < x; i++) {\n      // Math.floor(Math.random() * (max - min + 1)) + min;\n      // random = (Math.floor(Math.random() * (timeFinish - timeStart + 1)) + timeStart + first + second)*1000;\n      random = (Math.floor(Math.random() * (parseInt(timeFinish) - parseInt(timeStart) + 1)) + parseInt(timeStart) + parseInt(first) + parseInt(second)) * 1000;\n      console.log(y); // parseFloat(random)\n\n      y = random + y;\n      array.push(y); // random = ((Math.floor(Math.random() * (info.timeFinish - info.timeStart)) + info.timeStart  + info.first + info.second))*1000;\n    }\n\n    console.log(array);\n    y = 0;\n    console.log(\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\");\n    random = 0;\n    setArr(array);\n    array = [];\n  }\n\n  function start() {\n    console.log(arr);\n    console.log(\"start\");\n    arr.map(el => {\n      setTimeout(setGreenColor, el + timeStart * 1000);\n      setTimeout(setColor, el + first * 1000 + timeStart * 1000);\n      setTimeout(setWhite, el + first * 1000 + second * 1000 + timeStart * 1000);\n      return console.log(\"costam\");\n    });\n  } //\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, \"Czas trwania pierwszego sygna\\u0142u\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"first\",\n    value: first,\n    onChange: handleChangeFirst,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, \"Czas trwania drugiego sygna\\u0142u\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"second\",\n    value: second,\n    onChange: handleChangeSecond,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, \"Minimalny czas oczekiwania na sygna\\u0142\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"timeStart\",\n    value: timeStart,\n    onChange: handleChangeStart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, \"Maksymalny czas oczekiwania na sygna\\u0142\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"timeFinish\",\n    value: timeFinish,\n    onChange: handleChangeFinish,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: loop,\n    className: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, \"Kliknij aby zatwierdzi\\u0107 czas\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: start,\n    className: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, \"Start\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"box\",\n    style: {\n      backgroundColor: div\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/maciej/Pulpit/reflex/reflex/src/App.js"],"names":["React","useState","App","div","setDiv","first","setFirst","second","setSecond","timeStart","setTimeStart","timeFinish","setTimeFinish","arr","setArr","setGreenColor","setColor","colors","Math","floor","random","length","setWhite","handleChangeFirst","e","target","value","handleChangeSecond","console","log","handleChangeStart","handleChangeFinish","loop","x","array","y","parseInt","push","i","start","map","el","setTimeout","backgroundColor"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\n\n\nfunction App() {\n\n\n\n  const [div, setDiv] = useState(\"white\")\n  const [first, setFirst] = useState(1)\n  const [second, setSecond] = useState(1)\n  const [timeStart, setTimeStart] = useState(0);\n  const [timeFinish, setTimeFinish] = useState(12);\n  const [arr, setArr] = useState();\n\n\n\nconst setGreenColor = (arr) => {\n  setDiv(\"green\")\n  // console.log(el)\n\n\n}\nconst setColor = () => {\n  const colors = ['red', 'bronze', 'blue', 'orange', 'yellow'];\n  setDiv(colors[Math.floor(Math.random() * (colors.length - 0 + 1))+0])\n  // console.log(el + first*1000)\n}\nconst setWhite = () => {\n  setDiv(\"white\")\n  // console.log(el + first*1000 + second*1000)\n}\n\n\n\n\n  const handleChangeFirst = (e) => {\n\n    setFirst(e.target.value)\n\n    // console.log(array)\n     // setInfo((prev => ({ ...prev, [target.name]: target.value })));\n     // console.log(\"first\")\n     // console.log(info.first)\n   }\n\n   const handleChangeSecond = (e) => {\n     setSecond(e.target.value)\n      // console.log(array)\n      // setInfo((prev => ({ ...prev, [target.name]: target.value })));\n      console.log(\"second\")\n    }\n    const handleChangeStart = (e) => {\n      setTimeStart(e.target.value)\n      // console.log(array)\n\n       // setInfo((prev => ({ ...prev, [target.name]: target.value })));\n       console.log(\"third\")\n\n     }\n     const handleChangeFinish = (e) => {\n       setTimeFinish(e.target.value)\n       // console.log(array)\n        // setInfo((prev => ({ ...prev, [target.name]: target.value })));\n        console.log(\"fourth\")\n      }\n      function loop() {\n        const x = 100;\n        let array = [];\n        let y = 0;\n        let random = (Math.floor(Math.random() * (parseInt(timeFinish) - parseInt(timeStart) + 1)) + parseInt(timeStart))*1000;\n\n        // parseFloat(random)\n\n        y = random + y;\n        array.push(y);\n        for (let i = 0; i < x; i++) {\n          // Math.floor(Math.random() * (max - min + 1)) + min;\n          // random = (Math.floor(Math.random() * (timeFinish - timeStart + 1)) + timeStart + first + second)*1000;\n          random = (Math.floor(Math.random() * (parseInt(timeFinish) - parseInt(timeStart) + 1)) + parseInt(timeStart) + parseInt(first) + parseInt(second))*1000;\n\n          console.log(y)\n\n          // parseFloat(random)\n\n          y = random + y;\n\n          array.push(y);\n\n          // random = ((Math.floor(Math.random() * (info.timeFinish - info.timeStart)) + info.timeStart  + info.first + info.second))*1000;\n        }\n        console.log(array)\n        y = 0;\n      console.log(\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\")\n      random = 0\n        setArr(array)\n        array = [];\n\n\n      }\n\n\nfunction start() {\n\n  console.log(arr)\n  console.log(\"start\")\n  arr.map(el => {\n     setTimeout(setGreenColor, el + timeStart*1000);\n     setTimeout(setColor, el + first*1000 + timeStart*1000);\n     setTimeout(setWhite, el + first*1000 + second*1000 + timeStart*1000);\n     return console.log(\"costam\")\n   });\n }\n\n\n\n//\n\n\n\n\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"inputs\">\n\n\n        <label>Czas trwania pierwszego sygnału\n      <input type=\"number\" name=\"first\" value={first} onChange={handleChangeFirst} />\n      </label>\n      <label>Czas trwania drugiego sygnału\n      <input type=\"number\" name=\"second\" value={second} onChange={handleChangeSecond}  />\n      </label>\n      <label>Minimalny czas oczekiwania na sygnał\n      <input type=\"number\" name=\"timeStart\" value={timeStart} onChange={handleChangeStart}  />\n      </label>\n\n\n      <label>Maksymalny czas oczekiwania na sygnał\n      <input type=\"number\" name=\"timeFinish\" value={timeFinish} onChange={handleChangeFinish}  />\n      </label>\n      <button onClick={loop} className=\"start\">Kliknij aby zatwierdzić czas</button>\n      <button onClick={start} className=\"start\">Start</button>\n      </div>\n\n\n\n\n      <div className=\"box\" style={{backgroundColor: div}}></div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}